//-------------------------------------*\
//   $VARIABLES
//-------------------------------------*/

$columns: 12 !default;
$gutter: 20px !default;
$medium: 640px !default;
$large: 1024px !default;

$resolutions : (small : 0, medium : 640px, large : 1024px) !default;


//--------------------------------------*\
//    $MIXINS
//--------------------------------------*/

@mixin responsive-columns($suff: ''){
    @for $i from 0 through $columns{
        @if $i != 0 {
            .col-#{$suff}-#{$i}{width: $i /$columns * 100%;}
        }
        .col-#{$suff}-center {margin: 0 auto; float:none;}
        .col-#{$suff}-push-#{$i} { left : $i / $columns * 100% ;}
        .col-#{$suff}-pull-#{$i} { left : $i / $columns * 100% ;}

    }
}

//-------------------------------------*\
//    $EXTENDS
//-------------------------------------*/

%col{
    float: left;
    position: relative;
    min-height:1px;
    padding: 0 $gutter * 0.5;

}

%clearfix{
    &:before,
    &:after {
      content:"";
      display:table;
    }
    &:after {
      clear:both;
    }
    & {
      zoom:1; /* For IE 6/7 (trigger hasLayout) */
    }
}

/*-------------------------------------*\
    $CLASSE GÉNÉRIQUES
\*-------------------------------------*/

.row{
    margin: 0 $gutter * -0.5;
    @extend %clearfix;
}

.col-center{
    margin: 0 auto;
    float: none;
}


@each $suffix, $taille in $resolutions {
     @for $i from 1 through $columns{
        .col-#{$suffix}-#{$i} {
            @extend %col;
        }
    }
}

@each $suffix, $taille in $resolutions {
    @if $taille == 0 {
        @include responsive-columns($suffix);
    } @else {
        @media only screen and (min-width:#{$taille}){
            @include responsive-columns($suffix);
        }
    }
}
